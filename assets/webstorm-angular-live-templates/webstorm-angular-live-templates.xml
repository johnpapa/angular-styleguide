<templateSet group="angular-styleguide">
    <template name="ngcontroller"
              value="(function() {&#10;    'use strict';&#10;&#10;    angular&#10;        .module('$moduleName$')&#10;        .controller('$ControllerName$', $ControllerName$);&#10;&#10;    $ControllerName$.$inject = ['$dependency$'];&#10;&#10;    /* @ngInject */&#10;    function $ControllerName$($dependency$) {&#10;        var vm = this;&#10;        vm.title = '$ControllerName$';&#10;&#10;        activate();&#10;&#10;        ////////////////&#10;&#10;        function activate() {&#10;            $activateFunction$&#10;        }&#10;    }&#10;&#10;})();&#10;&#10;$END$"
              description="Creates an Angular controller" toReformat="true" toShortenFQNames="true">
        <variable name="moduleName" expression="" defaultValue="&quot;moduleName&quot;" alwaysStopAt="true"/>
        <variable name="ControllerName" expression="" defaultValue="&quot;ControllerName&quot;" alwaysStopAt="true"/>
        <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true"/>
        <variable name="activateFunction" expression="" defaultValue="&quot;code&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngdirective"
              value="(function() {&#10;    'use strict';&#10;&#10;    angular&#10;        .module('$moduleName$')&#10;        .directive('$directiveName$', $directiveName$);&#10;&#10;    $directiveName$.$inject = ['$dependency$'];&#10;&#10;    /* @ngInject */&#10;    function $directiveName$($dependency$) {&#10;        var directive = {&#10;            bindToController: true,&#10;            controller: $ControllerName$,&#10;            controllerAs: 'vm',&#10;            link: link,&#10;            restrict: 'A',&#10;            scope: {}&#10;        };&#10;        return directive;&#10;&#10;        function link(scope, element, attrs) {&#10;            $linkFunction$&#10;        }&#10;    }&#10;&#10;    $ControllerName$.$inject = ['$dependency$'];&#10;&#10;    /* @ngInject */&#10;    function $ControllerName$($dependency$) {&#10;        $ControllerNameFunction$&#10;    }&#10;&#10;})();&#10;&#10;$END$"
              description="Creates an Angular directive" toReformat="true" toShortenFQNames="true">
        <variable name="moduleName" expression="" defaultValue="&quot;moduleName&quot;" alwaysStopAt="true"/>
        <variable name="directiveName" expression="" defaultValue="&quot;directiveName&quot;" alwaysStopAt="true"/>
        <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true"/>
        <variable name="ControllerName" expression="" defaultValue="&quot;ControllerName&quot;" alwaysStopAt="true"/>
        <variable name="linkFunction" expression="" defaultValue="" alwaysStopAt="true"/>
        <variable name="ControllerNameFunction" expression="" defaultValue="" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngfactory"
              value="(function() {&#10;    'use strict';&#10;&#10;    angular&#10;        .module('$moduleName$')&#10;        .factory('$factoryName$', $factoryName$);&#10;&#10;    $factoryName$.$inject = ['$dependency$'];&#10;&#10;    /* @ngInject */&#10;    function $factoryName$($dependency$) {&#10;        var service = {&#10;            $functionName$: $functionName$&#10;        };&#10;        return service;&#10;&#10;        ////////////////&#10;&#10;        function $functionName$() {&#10;            $functionNameFunction$&#10;        }&#10;    }&#10;&#10;})();&#10;&#10;$END$"
              description="Creates an Angular factory" toReformat="true" toShortenFQNames="true">
        <variable name="moduleName" expression="" defaultValue="&quot;moduleName&quot;" alwaysStopAt="true"/>
        <variable name="factoryName" expression="" defaultValue="&quot;factoryName&quot;" alwaysStopAt="true"/>
        <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true"/>
        <variable name="functionName" expression="" defaultValue="&quot;functionName&quot;" alwaysStopAt="true"/>
        <variable name="functionNameFunction" expression="" defaultValue="&quot;code&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngfilter"
              value="(function() {&#10;    'use strict';&#10;&#10;    angular&#10;        .module('$moduleName$')&#10;        .filter('$filterName$', $filterName$);&#10;&#10;    function $filterName$() {&#10;        return $filterName$Filter;&#10;&#10;        ////////////////&#10;&#10;        function $filterName$Filter($parameters$) {&#10;            return $parameters$;&#10;        }&#10;    }&#10;&#10;})();&#10;&#10;$END$"
              description="Creates an Angular filter" toReformat="true" toShortenFQNames="true">
        <variable name="moduleName" expression="" defaultValue="&quot;moduleName&quot;" alwaysStopAt="true"/>
        <variable name="filterName" expression="" defaultValue="&quot;filterName&quot;" alwaysStopAt="true"/>
        <variable name="parameters" expression="" defaultValue="&quot;parameters&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngapp"
              value="(function() {&#10;    'use strict';&#10;&#10;    angular&#10;        .module('$moduleName$', [&#10;            '$dependency$'$END$&#10;        ]);&#10;&#10;})();"
              description="Creates an Angular module setter" toReformat="true" toShortenFQNames="true">
        <variable name="moduleName" expression="" defaultValue="&quot;moduleName&quot;" alwaysStopAt="true"/>
        <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngservice"
              value="(function() {&#10;    'use strict';&#10;&#10;    angular&#10;        .module('$moduleName$')&#10;        .service('$ServiceName$', $ServiceName$);&#10;&#10;    $ServiceName$.$inject = ['$dependency$'];&#10;&#10;    /* @ngInject */&#10;    function $ServiceName$($dependency$) {&#10;        this.$functionName$ = $functionName$;&#10;&#10;        ////////////////&#10;&#10;        function $functionName$() {&#10;            $functionNameFunction$&#10;        }&#10;    }&#10;&#10;})();&#10;&#10;$END$"
              description="Creates an Angular service" toReformat="true" toShortenFQNames="true">
        <variable name="moduleName" expression="" defaultValue="&quot;moduleName&quot;" alwaysStopAt="true"/>
        <variable name="ServiceName" expression="" defaultValue="&quot;ServiceName&quot;" alwaysStopAt="true"/>
        <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true"/>
        <variable name="functionName" expression="" defaultValue="&quot;functionName&quot;" alwaysStopAt="true"/>
        <variable name="functionNameFunction" expression="" defaultValue="&quot;code&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngconfig"
              value=".config($config$)&#10;&#10;$config$.$inject = ['$dependency$'];&#10;&#10;/* @ngInject */&#10;function $config$ ($dependency$) {&#10;    $configFunction$&#10;}$END$"
              description="Defines a configuration phase function" toReformat="false" toShortenFQNames="true">
        <variable name="config" expression="" defaultValue="&quot;config&quot;" alwaysStopAt="true"/>
        <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true"/>
        <variable name="configFunction" expression="" defaultValue="&quot;code&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngstate"
              value=".state('$state$', {&#10;    url: '/$url$',&#10;    templateUrl: '$template$.html',&#10;    controller: '$ControllerName$',&#10;    controllerAs: '$vm$'&#10;})$END$"
              description="Creates an Angular UI Router state defintion" toReformat="false" toShortenFQNames="true">
        <variable name="state" expression="" defaultValue="&quot;state&quot;" alwaysStopAt="true"/>
        <variable name="url" expression="" defaultValue="&quot;url&quot;" alwaysStopAt="true"/>
        <variable name="template" expression="" defaultValue="&quot;template&quot;" alwaysStopAt="true"/>
        <variable name="ControllerName" expression="" defaultValue="&quot;ControllerName&quot;" alwaysStopAt="true"/>
        <variable name="vm" expression="" defaultValue="&quot;vm&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngrun"
              value=".run(run$runName$)&#10;&#10;run$runName$.$inject = ['$dependency$'];&#10;&#10;/* @ngInject */&#10;function run$runName$ ($dependency$) {&#10;    $runNameFunction$&#10;}$END$"
              description="Defines a run phase function" toReformat="false" toShortenFQNames="true">
        <variable name="runName" expression="" defaultValue="&quot;Name&quot;" alwaysStopAt="true"/>
        <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true"/>
        <variable name="runNameFunction" expression="" defaultValue="&quot;code&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngmodule" value="angular&#10;    .module('$moduleName$')&#10;    $END$"
              description="Creates an Angular module getter" toReformat="false" toShortenFQNames="true">
        <variable name="moduleName" expression="" defaultValue="&quot;module&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
    <template name="ngroute"
              value=".when('/$url$', {&#10;    templateUrl: '$template$.html',&#10;    controller: '$ControllerName$',&#10;    controllerAs: '$vm$'&#10;})$END$"
              description="Defines an Angular ngRoute 'when' definition" toReformat="false" toShortenFQNames="true">
        <variable name="url" expression="" defaultValue="&quot;url&quot;" alwaysStopAt="true"/>
        <variable name="template" expression="" defaultValue="&quot;template&quot;" alwaysStopAt="true"/>
        <variable name="ControllerName" expression="" defaultValue="&quot;ControllerName&quot;" alwaysStopAt="true"/>
        <variable name="vm" expression="" defaultValue="&quot;vm&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="false"/>
            <option name="HTML" value="false"/>
            <option name="XSL_TEXT" value="false"/>
            <option name="XML" value="false"/>
            <option name="XML_TEXT" value="false"/>
            <option name="JSON" value="false"/>
            <option name="JSP" value="false"/>
            <option name="CSS_PROPERTY_VALUE" value="false"/>
            <option name="CSS_DECLARATION_BLOCK" value="false"/>
            <option name="CSS_RULESET_LIST" value="false"/>
            <option name="CSS" value="false"/>
            <option name="CUCUMBER_FEATURE_FILE" value="false"/>
            <option name="JAVA_SCRIPT" value="false"/>
            <option name="JS_EXPRESSION" value="false"/>
            <option name="JSX_HTML" value="false"/>
            <option name="JS_STATEMENT" value="true"/>
            <option name="TypeScript" value="false"/>
            <option name="Handlebars" value="false"/>
            <option name="HAML" value="false"/>
            <option name="JADE" value="false"/>
            <option name="CoffeeScript" value="false"/>
            <option name="DART" value="false"/>
            <option name="OTHER" value="false"/>
        </context>
    </template>
</templateSet>
