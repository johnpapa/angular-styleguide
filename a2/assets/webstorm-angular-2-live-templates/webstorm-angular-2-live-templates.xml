<templateSet group="Angular2">
  <template name="ng2-component" value="import { Component, OnInit } from 'angular2/core';&#10;&#10;@Component({&#10;    selector: '$selector$',&#10;    templateUrl: '$path$/$name$.component.html'&#10;})&#10;export class $ComponentName$Component implements OnInit {&#10;    constructor() { }&#10;    &#10;    ngOnInit() { }&#10;}" description="Angular 2 component snippet" toReformat="false" toShortenFQNames="true">
    <variable name="selector" expression="" defaultValue="&quot;selector&quot;" alwaysStopAt="true" />
    <variable name="path" expression="" defaultValue="&quot;path&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="ComponentName" expression="" defaultValue="&quot;ComponentName&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-service" value="import {Injectable} from 'angular2/core';&#10;&#10;@Injectable()&#10;export class $ServiceName$Service {&#10;&#10;    constructor() { }&#10;    &#10;}" description="Angular 2 service snippet" toReformat="false" toShortenFQNames="true">
    <variable name="ServiceName" expression="" defaultValue="&quot;ServiceName&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-pipe" value="import { Pipe, PipeTransform } from 'angular2/core';&#10;&#10;@Pipe({&#10;    '$name$'&#10;})&#10;&#10;export class $PipeName%Pipe implements PipeTransform {&#10;    transform(value: $valuetype$, args: $argstype$) : any {&#10;    }&#10;}" description="Angular 2 pipe snippet" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="valuetype" expression="" defaultValue="&quot;valuetype&quot;" alwaysStopAt="true" />
    <variable name="argstype" expression="" defaultValue="&quot;argstype&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-routes" value="@RouteConfig([&#10;    { path: '/$path$', name: '$RouteName$', component: $Component$ }&#10;])" description="Angular 2 route config snippet" toReformat="false" toShortenFQNames="true">
    <variable name="path" expression="" defaultValue="&quot;path&quot;" alwaysStopAt="true" />
    <variable name="RouteName" expression="" defaultValue="&quot;RouteName&quot;" alwaysStopAt="true" />
    <variable name="Component" expression="" defaultValue="&quot;Component&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-route-path" value="{ path: '/$path$', name: '$RouteName$', component: $Component$ }" description="Angular 2 route path snippet" toReformat="false" toShortenFQNames="true">
    <variable name="path" expression="" defaultValue="&quot;path&quot;" alwaysStopAt="true" />
    <variable name="RouteName" expression="" defaultValue="&quot;RouteName&quot;" alwaysStopAt="true" />
    <variable name="Component" expression="" defaultValue="&quot;Component&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-subscribe" value="this.$service$.$function$&#10;    .subscribe($arg$ =&gt; this.$property$ = $arg$);" description="Angular 2 observable subscribe snippet" toReformat="false" toShortenFQNames="true">
    <variable name="service" expression="" defaultValue="&quot;service&quot;" alwaysStopAt="true" />
    <variable name="function" expression="" defaultValue="&quot;function&quot;" alwaysStopAt="true" />
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <variable name="property" expression="" defaultValue="&quot;property&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-boostrap" value="import { bootstrap } from 'angular2/platform/browser';&#10;import { $AppComponent$ } from './$name$.component';&#10;&#10;bootstrap($AppComponent$, [])&#10;    .then(success =&gt; console.log('Bootstrap success'))&#10;    .catch(error =&gt; console.log(error));" description="Angular 2 bootstrap snippet" toReformat="false" toShortenFQNames="true">
    <variable name="AppComponent" expression="" defaultValue="&quot;AppComponent&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-component-root" value="import { Component } from 'angular2/core';&#10;import { HTTP_PROVIDERS } from 'angular2/http';&#10;import { RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS } from 'angular2/router';&#10;&#10;@Component({&#10;    selector: '$selector$',&#10;    templateUrl: '$path$/$name$.component.html',&#10;    directives: [ROUTER_DIRECTIVES],&#10;    providers: [HTTP_PROVIDERS, ROUTER_PROVIDERS]&#10;})&#10;&#10;@RouteConfig([])&#10;&#10;export class AppComponent {}" description="Angular 2 App root component snippet" toReformat="false" toShortenFQNames="true">
    <variable name="selector" expression="" defaultValue="&quot;selector&quot;" alwaysStopAt="true" />
    <variable name="path" expression="" defaultValue="&quot;path&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>